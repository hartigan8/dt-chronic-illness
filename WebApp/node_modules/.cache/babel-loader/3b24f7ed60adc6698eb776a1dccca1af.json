{"ast":null,"code":"var _jsxFileName = \"/Users/can/Documents/dt-bitirme/WebApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport * as Components from './Components';\nimport SuccessPage from './SuccessPage';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const isValidEmail = email => /\\S+@\\S+\\.\\S+/.test(email);\n\n  const isValidPassword = password => password.length >= 6;\n\n  const [login, toggle] = React.useState(true);\n  const [loginMail, setLoginMail] = React.useState('');\n  const [loginPassword, setLoginPassword] = React.useState('');\n  const [registerMail, setRegisterMail] = React.useState('');\n  const [registerPassword, setRegisterPassword] = React.useState('');\n  const [registerName, setRegisterName] = React.useState('');\n  let navigate = useNavigate();\n\n  const handleRegisterName = value => {\n    setRegisterName(value);\n  };\n\n  const handleLoginEmail = value => {\n    setLoginMail(value);\n  };\n\n  const handleLoginPassword = value => {\n    setLoginPassword(value);\n  };\n\n  const handleRegisterEmail = value => {\n    setRegisterMail(value);\n  };\n\n  const handleRegisterPassword = value => {\n    setRegisterPassword(value);\n  };\n\n  const handleRegisterSubmit = async event => {\n    event.preventDefault(); // Prevent the form from submitting naturally\n\n    if (!isValidEmail(registerMail) || !isValidPassword(registerPassword)) {\n      console.error('Invalid email or password');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:8080/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: registerName,\n          email: registerMail,\n          password: registerPassword\n        })\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        // Save the tokens. You might want to save them in localStorage or in a state management library\n        localStorage.setItem('access_token', data.access_token);\n        localStorage.setItem('refresh_token', data.refresh_token);\n        navigate('/success'); // Redirect the user or perform other actions like updating the UI\n      } else {\n        // Handle errors - data might include error message\n        console.error(data.message);\n      }\n    } catch (error) {\n      console.error('Error during registration:', error);\n    }\n  };\n\n  const handleLoginSubmit = async event => {\n    event.preventDefault(); // Prevent the form from submitting naturally\n\n    if (!isValidEmail(registerMail) || !isValidPassword(registerPassword)) {\n      console.error('Invalid email or password');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:8080/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: loginMail,\n          password: loginPassword\n        })\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        // Save the tokens. You might want to save them in localStorage or in a state management library\n        localStorage.setItem('access_token', data.access_token);\n        localStorage.setItem('refresh_token', data.refresh_token); // Redirect the user or perform other actions like updating the UI\n\n        navigate('/success');\n      } else {\n        // Handle errors - data might include error message\n        console.error(data.message);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/success\",\n        element: /*#__PURE__*/_jsxDEV(SuccessPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Forms, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"vMJWukdovGSa0aSNGr+IC4uKyx8=\", true);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Components","SuccessPage","BrowserRouter","Router","Route","Routes","App","isValidEmail","email","test","isValidPassword","password","length","login","toggle","useState","loginMail","setLoginMail","loginPassword","setLoginPassword","registerMail","setRegisterMail","registerPassword","setRegisterPassword","registerName","setRegisterName","navigate","useNavigate","handleRegisterName","value","handleLoginEmail","handleLoginPassword","handleRegisterEmail","handleRegisterPassword","handleRegisterSubmit","event","preventDefault","console","error","response","fetch","method","headers","body","JSON","stringify","name","data","json","ok","localStorage","setItem","access_token","refresh_token","message","handleLoginSubmit"],"sources":["/Users/can/Documents/dt-bitirme/WebApp/src/App.js"],"sourcesContent":["import React from \"react\";\nimport * as Components from './Components';\nimport SuccessPage from './SuccessPage';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n function App() {\n    const isValidEmail = (email) => /\\S+@\\S+\\.\\S+/.test(email);\n    const isValidPassword = (password) => password.length >= 6;\n    const [login, toggle] = React.useState(true);\n    const [loginMail, setLoginMail] = React.useState('');\n    const [loginPassword, setLoginPassword] = React.useState('');\n    const [registerMail, setRegisterMail] = React.useState('');\n    const [registerPassword, setRegisterPassword] = React.useState('');\n    const [registerName, setRegisterName] = React.useState('');\n    let navigate = useNavigate();\n    const handleRegisterName = (value) =>{\n        setRegisterName(value)\n    }\n    const handleLoginEmail = (value) =>{\n        setLoginMail(value)\n    }\n    const handleLoginPassword = (value) =>{\n        setLoginPassword(value)\n    }\n    const handleRegisterEmail = (value) =>{\n        setRegisterMail(value)\n    }\n    const handleRegisterPassword = (value) =>{\n        setRegisterPassword(value)\n    }\n    const handleRegisterSubmit = async (event) => {\n        event.preventDefault(); // Prevent the form from submitting naturally\n        if (!isValidEmail(registerMail) || !isValidPassword(registerPassword)) {\n            console.error('Invalid email or password');\n            return;\n        }\n        try {\n            const response = await fetch('http://localhost:8080/auth/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    name: registerName,\n                    email: registerMail,\n                    password: registerPassword,\n                }),\n            });\n    \n            const data = await response.json();\n            if (response.ok) {\n                // Save the tokens. You might want to save them in localStorage or in a state management library\n                localStorage.setItem('access_token', data.access_token);\n                localStorage.setItem('refresh_token', data.refresh_token);\n                navigate('/success');\n                // Redirect the user or perform other actions like updating the UI\n            } else {\n                // Handle errors - data might include error message\n                console.error(data.message);\n            }\n        } catch (error) {\n            console.error('Error during registration:', error);\n        }\n    };\n    \n    const handleLoginSubmit = async (event) => {\n        event.preventDefault(); // Prevent the form from submitting naturally\n        if (!isValidEmail(registerMail) || !isValidPassword(registerPassword)) {\n            console.error('Invalid email or password');\n            return;\n        }\n        try {\n            const response = await fetch('http://localhost:8080/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    email: loginMail,\n                    password: loginPassword,\n                }),\n            });\n    \n            const data = await response.json();\n            if (response.ok) {\n                // Save the tokens. You might want to save them in localStorage or in a state management library\n                localStorage.setItem('access_token', data.access_token);\n                localStorage.setItem('refresh_token', data.refresh_token);\n                // Redirect the user or perform other actions like updating the UI\n                navigate('/success');\n            } else {\n                // Handle errors - data might include error message\n                console.error(data.message);\n            }\n        } catch (error) {\n            console.error('Error during login:', error);\n        }\n    };\n    \n\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/success\" element={<SuccessPage />} />\n                <Route path=\"/\" element={<Forms />} /> {/* Use the Forms component here */}\n            </Routes>\n        </Router>\n    );\n}\n    \n\n export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}